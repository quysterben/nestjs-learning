name: Continuous Integration and Continuous Deployment
run-name: CI/CD
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [master]
jobs:
  run-quantity-code:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          echo "Start install dependencies..."
          yarn
          echo "End install dependencies..."
      - name: Checking code convention
        run: |
          echo "Start lint..."
          yarn lint
          echo "End lint..."
  build-docker-image:
    needs: run-quantity-code
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.export_image_tag.outputs.IMAGE_TAG }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Add SHORT_SHA to the environment
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | head -c 7)" >> $GITHUB_ENV
      - name: Extract Git Tag
        run: echo "IMAGE_TAG=$GITHUB_REF_NAME-$GITHUB_RUN_NUMBER-$SHORT_SHA" >> $GITHUB_ENV
      - name: Create .env
        run: echo "${{ secrets.ENV }}" >> .env
      - name: Build the dopcker image
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG}}
        uses: docker/build-push-action@v5
        id: docker_build_server
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/nestjs-server:${{ env.IMAGE_TAG }}
      - name: Verify
        run: |
          echo IMAGE_TAG=$IMAGE_TAG
          echo ${{ steps.docker_build_server.outputs.digest }}
      - name: Export IMAGE_TAG to github output
        id: export_image_tag
        run: echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT
  deploy-server:
    needs: build-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Print IMAGE_TAG value
        run: echo "IMAGE_TAG value is ${{ needs.build-docker-image.outputs.IMAGE_TAG }}"
      - name: executing remote ssh
        env:
          IMAGE_TAG: ${{ needs.build-docker-image.outputs.IMAGE_TAG }}
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_PKEY }}
          port: ${{ secrets.DO_PORT }}
          script: |
            docker ps -q --filter "name=nestjs-server" | grep -q . && docker stop nestjs-server
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nestjs-server:${{ env.IMAGE_TAG }}
            docker run -d --rm --name nestjs-server ${{ secrets.DOCKERHUB_USERNAME }}/nestjs-server:${{ env.IMAGE_TAG }}